{
  "uid" : "b65e4fd371d32c0a",
  "name" : "书籍商城-商品列表",
  "fullName" : "TestCase.test_booksmall.TestMall#test_get_book_list",
  "historyId" : "cbd4551bd1164f707b13f2e2b62eea40",
  "time" : {
    "start" : 1622794771212,
    "stop" : 1622794804181,
    "duration" : 32969
  },
  "status" : "broken",
  "statusMessage" : "FileNotFoundError: [Errno 2] No such file or directory: 'D:\\\\gitfile\\\\uiautomation\\\\zikaow\\\\TestCase/report/images/a_20210604162003.png'",
  "statusTrace" : "self = <zikaow.TestCase.test_booksmall.TestMall object at 0x000001FE1DE87A00>\npos = 4\n\n    @allure.title('书籍商城-商品列表')\n    @pytest.mark.parametrize(\"pos\", [pos for pos in range(1, 5)])\n    def test_get_book_list(self, pos):\n        print(\"--------------b手机数据---------------\")\n        aa = self.BooksMall.slide(pos, 'title')\n        print(aa)\n        bb = self.BooksMall.slide(pos, 'hint')\n        print(bb)\n        cc = self.BooksMall.slide(pos, 'price')\n        print(cc)\n        dd = self.BooksMall.slide(pos, 'sales')\n        print(dd)\n        print(\"-------------b接口数据----------------\")\n        dict1 = self.BooksMall.get_value(pos, 'title')\n        print(dict1)\n        a = dict1['name']\n        print(a)\n        b = dict1['briefIntroduction']\n        print(b)\n        c = dict1['discountPrice']\n        print(c)\n        d = dict1['sales']\n        print(d)\n        print(\"-------------m书籍详情----------------\")\n        self.BooksMall.get_pos_click(pos)\n        aaa = self.BooksMall.get_element(\"id\", \"com.zikao.eduol:id/shop_detail_name\", \"text\")\n        print(aaa)\n        bbb = self.BooksMall.get_element(\"id\", \"com.zikao.eduol:id/shop_detail_hint\", \"text\")\n        print(bbb)\n        ccc = self.BooksMall.get_element(\"id\", \"com.zikao.eduol:id/shop_detail_price\", \"text\")\n        print(ccc)\n        ddd = self.BooksMall.get_element(\"id\", \"com.zikao.eduol:id/shop_detail_count\", \"text\")\n        print(ddd)\n>       allure.attach.file(self.BooksMall.get_screen(f'{file_path1}{\"/report/images/\"}'),\n                           '书籍详情', attachment_type=allure.attachment_type.PNG)\n\nTestCase\\test_booksmall.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\allure_commons\\_allure.py:182: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pluggy\\manager.py:84: in <lambda>\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\nc:\\users\\administrator\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\allure_pytest\\listener.py:226: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\allure_commons\\reporter.py:114: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pluggy\\manager.py:84: in <lambda>\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\allure_commons\\logger.py:53: in report_attached_file\n    shutil.copy2(source, destination)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\shutil.py:432: in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsrc = 'D:\\\\gitfile\\\\uiautomation\\\\zikaow\\\\TestCase/report/images/a_20210604162003.png'\ndst = 'D:\\\\gitfile\\\\uiautomation\\\\zikaow\\\\TestData\\\\report\\\\f76756dc-6cb8-4507-88e2-123ee5796377-attachment.png'\n\n    def copyfile(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data from src to dst in the most efficient way possible.\n    \n        If follow_symlinks is not set and src is a symbolic link, a new\n        symlink will be created instead of copying the file it points to.\n    \n        \"\"\"\n        sys.audit(\"shutil.copyfile\", src, dst)\n    \n        if _samefile(src, dst):\n            raise SameFileError(\"{!r} and {!r} are the same file\".format(src, dst))\n    \n        file_size = 0\n        for i, fn in enumerate([src, dst]):\n            try:\n                st = _stat(fn)\n            except OSError:\n                # File most likely does not exist\n                pass\n            else:\n                # XXX What about other special files? (sockets, devices...)\n                if stat.S_ISFIFO(st.st_mode):\n                    fn = fn.path if isinstance(fn, os.DirEntry) else fn\n                    raise SpecialFileError(\"`%s` is a named pipe\" % fn)\n                if _WINDOWS and i == 0:\n                    file_size = st.st_size\n    \n        if not follow_symlinks and _islink(src):\n            os.symlink(os.readlink(src), dst)\n        else:\n>           with open(src, 'rb') as fsrc, open(dst, 'wb') as fdst:\nE           FileNotFoundError: [Errno 2] No such file or directory: 'D:\\\\gitfile\\\\uiautomation\\\\zikaow\\\\TestCase/report/images/a_20210604162003.png'\n\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\shutil.py:261: FileNotFoundError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "xunit_setup_class_fixture_TestMall",
    "time" : {
      "start" : 1622794582679,
      "stop" : 1622794590120,
      "duration" : 7441
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "FileNotFoundError: [Errno 2] No such file or directory: 'D:\\\\gitfile\\\\uiautomation\\\\zikaow\\\\TestCase/report/images/a_20210604162003.png'",
    "statusTrace" : "self = <zikaow.TestCase.test_booksmall.TestMall object at 0x000001FE1DE87A00>\npos = 4\n\n    @allure.title('书籍商城-商品列表')\n    @pytest.mark.parametrize(\"pos\", [pos for pos in range(1, 5)])\n    def test_get_book_list(self, pos):\n        print(\"--------------b手机数据---------------\")\n        aa = self.BooksMall.slide(pos, 'title')\n        print(aa)\n        bb = self.BooksMall.slide(pos, 'hint')\n        print(bb)\n        cc = self.BooksMall.slide(pos, 'price')\n        print(cc)\n        dd = self.BooksMall.slide(pos, 'sales')\n        print(dd)\n        print(\"-------------b接口数据----------------\")\n        dict1 = self.BooksMall.get_value(pos, 'title')\n        print(dict1)\n        a = dict1['name']\n        print(a)\n        b = dict1['briefIntroduction']\n        print(b)\n        c = dict1['discountPrice']\n        print(c)\n        d = dict1['sales']\n        print(d)\n        print(\"-------------m书籍详情----------------\")\n        self.BooksMall.get_pos_click(pos)\n        aaa = self.BooksMall.get_element(\"id\", \"com.zikao.eduol:id/shop_detail_name\", \"text\")\n        print(aaa)\n        bbb = self.BooksMall.get_element(\"id\", \"com.zikao.eduol:id/shop_detail_hint\", \"text\")\n        print(bbb)\n        ccc = self.BooksMall.get_element(\"id\", \"com.zikao.eduol:id/shop_detail_price\", \"text\")\n        print(ccc)\n        ddd = self.BooksMall.get_element(\"id\", \"com.zikao.eduol:id/shop_detail_count\", \"text\")\n        print(ddd)\n>       allure.attach.file(self.BooksMall.get_screen(f'{file_path1}{\"/report/images/\"}'),\n                           '书籍详情', attachment_type=allure.attachment_type.PNG)\n\nTestCase\\test_booksmall.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\allure_commons\\_allure.py:182: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pluggy\\manager.py:84: in <lambda>\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\nc:\\users\\administrator\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\allure_pytest\\listener.py:226: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\allure_commons\\reporter.py:114: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pluggy\\manager.py:84: in <lambda>\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\allure_commons\\logger.py:53: in report_attached_file\n    shutil.copy2(source, destination)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\shutil.py:432: in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsrc = 'D:\\\\gitfile\\\\uiautomation\\\\zikaow\\\\TestCase/report/images/a_20210604162003.png'\ndst = 'D:\\\\gitfile\\\\uiautomation\\\\zikaow\\\\TestData\\\\report\\\\f76756dc-6cb8-4507-88e2-123ee5796377-attachment.png'\n\n    def copyfile(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data from src to dst in the most efficient way possible.\n    \n        If follow_symlinks is not set and src is a symbolic link, a new\n        symlink will be created instead of copying the file it points to.\n    \n        \"\"\"\n        sys.audit(\"shutil.copyfile\", src, dst)\n    \n        if _samefile(src, dst):\n            raise SameFileError(\"{!r} and {!r} are the same file\".format(src, dst))\n    \n        file_size = 0\n        for i, fn in enumerate([src, dst]):\n            try:\n                st = _stat(fn)\n            except OSError:\n                # File most likely does not exist\n                pass\n            else:\n                # XXX What about other special files? (sockets, devices...)\n                if stat.S_ISFIFO(st.st_mode):\n                    fn = fn.path if isinstance(fn, os.DirEntry) else fn\n                    raise SpecialFileError(\"`%s` is a named pipe\" % fn)\n                if _WINDOWS and i == 0:\n                    file_size = st.st_size\n    \n        if not follow_symlinks and _islink(src):\n            os.symlink(os.readlink(src), dst)\n        else:\n>           with open(src, 'rb') as fsrc, open(dst, 'wb') as fdst:\nE           FileNotFoundError: [Errno 2] No such file or directory: 'D:\\\\gitfile\\\\uiautomation\\\\zikaow\\\\TestCase/report/images/a_20210604162003.png'\n\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\shutil.py:261: FileNotFoundError",
    "steps" : [ ],
    "attachments" : [ {
      "name" : "书籍详情",
      "type" : "image/png",
      "size" : 0
    }, {
      "uid" : "2a67d573d2c238cd",
      "name" : "stdout",
      "source" : "2a67d573d2c238cd.txt",
      "type" : "text/plain",
      "size" : 3082
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "xunit_setup_class_fixture_TestMall::0",
    "time" : {
      "start" : 1622794805474,
      "stop" : 1622794805854,
      "duration" : 380
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "书城模块"
  }, {
    "name" : "parentSuite",
    "value" : "TestCase"
  }, {
    "name" : "suite",
    "value" : "test_booksmall"
  }, {
    "name" : "subSuite",
    "value" : "TestMall"
  }, {
    "name" : "host",
    "value" : "MicroWin10-1243"
  }, {
    "name" : "thread",
    "value" : "4332-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCase.test_booksmall"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "pos",
    "value" : "4"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "b65e4fd371d32c0a.json",
  "parameterValues" : [ "4" ]
}